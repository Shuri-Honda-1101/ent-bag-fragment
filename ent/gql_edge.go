// Code generated by ent, DO NOT EDIT.

package ent

import (
	"context"

	"github.com/99designs/gqlgen/graphql"
)

func (pr *Project) Users(ctx context.Context) (result []*User, err error) {
	if fc := graphql.GetFieldContext(ctx); fc != nil && fc.Field.Alias != "" {
		result, err = pr.NamedUsers(graphql.GetFieldContext(ctx).Field.Alias)
	} else {
		result, err = pr.Edges.UsersOrErr()
	}
	if IsNotLoaded(err) {
		result, err = pr.QueryUsers().All(ctx)
	}
	return result, err
}

func (pr *Project) Tasks(ctx context.Context) (result []*Task, err error) {
	if fc := graphql.GetFieldContext(ctx); fc != nil && fc.Field.Alias != "" {
		result, err = pr.NamedTasks(graphql.GetFieldContext(ctx).Field.Alias)
	} else {
		result, err = pr.Edges.TasksOrErr()
	}
	if IsNotLoaded(err) {
		result, err = pr.QueryTasks().All(ctx)
	}
	return result, err
}

func (t *Task) Project(ctx context.Context) (*Project, error) {
	result, err := t.Edges.ProjectOrErr()
	if IsNotLoaded(err) {
		result, err = t.QueryProject().Only(ctx)
	}
	return result, MaskNotFound(err)
}

func (u *User) Project(ctx context.Context) (*Project, error) {
	result, err := u.Edges.ProjectOrErr()
	if IsNotLoaded(err) {
		result, err = u.QueryProject().Only(ctx)
	}
	return result, MaskNotFound(err)
}
